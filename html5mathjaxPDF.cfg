% We are generating HTML + MathML code
\Preamble{xhtml,mathml}

%Configure pdf files
\Configure{graphics*}  
       {pdf}  
       {\Needs{"pdftoppm -png '\csname Gin@base\endcsname.pdf'  
                             '\csname Gin@base\endcsname'"}%  
        \Picture[pict]{\csname Gin@base\endcsname-1.png}%  
        \special{t4ht+@File: \csname Gin@base\endcsname-1.png}
       } 

% We don't want to translate font suggestions with ugly wrappers like
% <span class="cmti-10"> for italic text
\NoFonts

% Don't output xml version tag
\Configure{VERSION}{}

% Output HTML5 doctype instead of the default for HTML4
\Configure{DOCTYPE}{\HCode{<!doctype html>\Hnewline}}

% Custom page opening
\Configure{HTML}{\HCode{<html lang="en">\Hnewline}}{\HCode{\Hnewline</html>}}

% Reset <head>, aka delete all default boilerplate
% \Configure{@HEAD}{}

% Setup custom <head> content
% \Configure{@HEAD}{\HCode{<meta charset="UTF-8" />\Hnewline}}
% \Configure{@HEAD}{\HCode{<meta name="generator" content="TeX4ht (http://www.cse.ohio-state.edu/\string~gurari/TeX4ht/)" />\Hnewline}}

% Setup CSS generic stylesheet
\Configure{@HEAD}{\HCode{<link rel="stylesheet" type="text/css" href="css" />\Hnewline}}

% Setup MathJax
\Configure{@HEAD}{\HCode{
<script type="text/x-mathjax-config">                                           
  MathJax.Hub.Config({
    TeX: {           
      Macros: {     
        \unexpanded{ ket: ['{\\left|\#1\\right\\rangle}',1]}
      },
      equationNumbers: { autoNumber: "AMS" }         
    },        
    extensions: ["tex2jax.js"], 
    tex2jax: {       
        \unexpanded{
      inlineMath: [ ['\$','\$'], ["\\\\(","\\\\)"] ],
      displayMath: [ ['$$','$$'], ["\\[","\\]"] ],}
      processEscapes: true
    }                   
  });                  
</script>   
}}
\Configure{@HEAD}{\HCode{<script type="text/javascript" id="MathJax-script" async src="https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js"></script>\Hnewline}}

%Setup Bootstrap styles
\Configure{@HEAD}{\HCode{<!-- Bootstrap CSS -->\Hnewline}}
\Configure{@HEAD}{\HCode{<link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css" integrity="sha384-Vkoo8x4CGsO3+Hhxv8T/Q5PaXtkKtu6ug5TOeNV6gBiFeWPGFN9MuhOf23Q9Ifjh" crossorigin="anonymous">\Hnewline}}
\Configure{@HEAD}{\HCode{<!-- Bootstrap JS and dependencies -->\Hnewline}}
\Configure{@HEAD}{\HCode{<script src="https://code.jquery.com/jquery-3.4.1.min.js" integrity="sha256-CSXorXvZcTkaix6Yvo6HppcZGetbYMGWSFlBw8HfCJo=" crossorigin="anonymous"></script>\Hnewline}}
\Configure{@HEAD}{\HCode{<script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.0/dist/umd/popper.min.js" integrity="sha384-Q6E9RHvbIyZFJoft+2mJbHaEWldlvI9IOYy5n3zV9zzTtmI3UksdQRVvoxMfooAo" crossorigin="anonymous"></script>\Hnewline}}
\Configure{@HEAD}{\HCode{<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/js/bootstrap.min.js" integrity="sha384-wfSDF2E50Y2D1uUdj0O3uMBJnjuUD4Ih7YwaYd1iqfktj0Uod8GCExl3Og8ifwB6" crossorigin="anonymous"></script>\Hnewline}}

% Tweak default style a little bit
% \Configure{@HEAD}{\HCode{<style type="text/css">\Hnewline .MathJax_MathML {text-indent: 0;}\Hnewline</style>\Hnewline}}

% Script for iamges visualization

\Configure{@HEAD}{\HCode{<script text="script/javascript">\Hnewline
  document.addEventListener("readystatechange",changeImage);\Hnewline
  function changeImage(){\Hnewline
    var URL = 'image?idImage=';\Hnewline
    var images = document.getElementsByTagName('img'); \Hnewline
    for(var i = 0; i < images.length; i++) {\Hnewline
        //We get the id of the image \Hnewline
        var paths = images[i].src.split("/");\Hnewline
        var ID = paths[paths.length-1].split(".")[0].split("-")[0];\Hnewline
        var source = URL + ID;\Hnewline
        \Hnewline
        //We create an iframe\Hnewline
        var iframe = document.createElement("iframe");\Hnewline
        iframe.src = source;\Hnewline
        iframe.classList.add("tex");\Hnewline
        iframe.frameBorder = 0;\Hnewline
        iframe.scrolling = "no";\Hnewline
        iframe.addEventListener("load",function(){\Hnewline
        this.style.height = this.contentWindow.document.getElementsByTagName("svg")[0].height.baseVal.value + "px"; \Hnewline
        this.style.width = this.contentWindow.document.getElementsByTagName("svg")[0].width.baseVal.value + "px"; \Hnewline
        });\Hnewline
        images[i].replaceWith(iframe);\Hnewline
    }\Hnewline
  }\Hnewline
  \Hnewline
  window.addEventListener("load",resizeIframe);\Hnewline
    function resizeIframe(){\Hnewline
      var list = document.getElementsByTagName("iframe");\Hnewline
      for (var _p of list) {\Hnewline
        _p.style.height = _p.contentWindow.document.getElementsByTagName("svg")[0].height.baseVal.value + "px";\Hnewline
        _p.style.width = _p.contentWindow.document.getElementsByTagName("svg")[0].width.baseVal.value + "px";\Hnewline
      }
    }
</script> \Hnewline}}

% Translate \textbf, \textit and \texttt directives into <b>, <em> and <code>
\Configure{textbf}{\ifvmode\ShowPar\fi\HCode{<b>}}{\HCode{</b>}}
\Configure{textit}{\ifvmode\ShowPar\fi\HCode{<i>}}{\HCode{</i>}}
\Configure{texttt}{\ifvmode\ShowPar\fi\HCode{<code>}}{\HCode{</code>}}

% Translate verbatim and lstlisting blocks into <pre> elements
\ConfigureEnv{verbatim}{\HCode{<pre>}}{\HCode{</pre>}}{}{}
\ConfigureEnv{lstlisting}{\HCode{<pre>}}{\HCode{</pre>}}{}{}

% Do not set `indent`/`noindent` classes on paragraphs
\Configure{HtmlPar}
{\EndP\Tg<p>}
{\EndP\Tg<p>}
{\HCode{</p>\Hnewline}}
{\HCode{</p>\Hnewline}}

\begin{document}
\EndPreamble
